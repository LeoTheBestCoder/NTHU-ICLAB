
task input_preparation;
    begin
        inputP = 0;
        inputS = 0;
        inputD = 0;
        inputMode = 0;
        for (i = `MODE_L; i <= `MODE_U; i = i + 1) begin
            for (j = 0; j < 2 ** N; j = j + 1) begin
                for (k = 0; k < 2 ** N; k = k + 1) begin
                    for (l = 0; l < 2 ** N; l = l + 1) begin
                        @(negedge clk)
                        {Mode_lastlast, P_lastlast, S_lastlast, D_lastlast} = {Mode_last, P_last, S_last, D_last};
                        {Mode_last, P_last, S_last, D_last} = {inputMode, inputP, inputS, inputD};
                        {inputMode, inputP, inputS, inputD} = {i[7:0], j[N-1:0], k[N-1:0], l[N-1:0]};
                        // $display("inputP = %b; inputS = %b, inputD = %b, inputMode = %b", inputP, inputS, inputD, inputMode);
                        // $display("lut256_out = %b, my answer is %b", lut256_out, smart_out);
                    end
                end
            end
        end
    end
endtask


task output_comparison;
    begin
        #(CYCLE * 2);

        for (_i = `MODE_L; _i <= `MODE_U; _i = _i + 1) begin
            $display("Start to verify Mode = %b (%3d)", inputMode, inputMode);
            for (_j = 0; _j < 2 ** N; _j = _j + 1) begin
                for (_k = 0; _k < 2 ** N; _k = _k + 1) begin
                    for (_l = 0; _l < 2 ** N; _l = _l + 1) begin
                        @(negedge clk);
                        // $display("P = %b, S = %b, D = %b, Mode = %b, lut256_out = %b, smart_out is %b", inputP, inputS, inputD, inputMode, lut256_out, smart_out);
                        if (lut256_out != smart_out) begin
                            $display("************* Pattern No.%d is wrong ************", idx);
                            $display("inputP = %b; inputS = %b, inputD = %b, inputMode = %b", inputP, inputS, inputD, inputMode);
                            $display("lut256_out = %b, but smart is %b", lut256_out, smart_out);
                            $finish;
                        end
                        // else begin
                        //     $display("************* Pattern No.%d is CORRECT ************", idx);
                        //     $display("inputP = %b; inputS = %b, inputD = %b, inputMode = %b", inputP, inputS, inputD, inputMode);
                        //     $display("lut256_out = %b, smart is %b", lut256_out, smart_out);
                        // end

                        
                    end
                end
            end
        end
        $display("ALL test cases are CORRECT!");
        $display("The functionality of my SMART ROP3 is correct!!");
        #(CYCLE) $finish;
    end
endtask